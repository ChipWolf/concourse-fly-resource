#!/bin/sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

set -x

. $(dirname $0)/common.sh

payload=$(mktemp $TMPDIR/fly-resource-request.XXXXXX)
cat > $payload <&0

url=$(jq -r '.source.url // ""' < $payload)
test -z "$url" && { echo "Must supply 'url' source attribute"; exit 1; }

username=$(jq -r '.source.username // ""' < $payload)
test -z "$username" && { echo "Must supply 'username' source attribute"; exit 1; }

password=$(jq -r '.source.password // ""' < $payload)
test -z "$password" && { echo "Must supply 'password' source attribute"; exit 1; }

team=$(jq -r '.source.team // "main"' < $payload)

insecure=$(jq -r '.source.insecure // "false"' < $payload)

command=$(jq -r '.params.command // ""' < $payload)
test -z "$command" && { echo "Must supply 'command' parameter"; exit 1; }

options=$(jq -r '.params.options // ""' < $payload)
options_file=$(jq -r '.params.options_file // ""' < $payload)

debug=$(jq -r '.params.debug // "false"' < $payload)

if [ -n "$options" ] && [ -n "$options_file" ]; then
  echo "Must supply one of 'options' or 'options_file', not both"
  exit 1
fi

if [ -n "$options_file" ]; then
  options=$(cat $options_file)
fi

test "$debug" = "true" && set -x

init_fly $url $username $password $team $insecure

(
  set -x
  fly -t main $command $options
)

jq -n "{
  version: {}
}" >&3
