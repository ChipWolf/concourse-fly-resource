#!/bin/bash

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

. $(dirname $0)/common.sh
cd $1

payload=$(mktemp $TMPDIR/fly-resource-request.XXXXXX)
cat > $payload <&0

url=$(jq -r '.source.url // ""' < $payload)
test -z "$url" && { echo "Must supply 'url' source attribute"; exit 1; }

username=$(jq -r '.source.username // ""' < $payload)
test -z "$username" && { echo "Must supply 'username' source attribute"; exit 1; }

password=$(jq -r '.source.password // ""' < $payload)
test -z "$password" && { echo "Must supply 'password' source attribute"; exit 1; }

team=$(jq -r '.source.team // "main"' < $payload)
insecure=$(jq -r '.source.insecure // "false"' < $payload)
debug=$(jq -r '.source.debug // "false"' < $payload)
multiline_lines=$(jq -r '.source.multiline_lines // "false"' < $payload)
secure_output=$(jq -r '.source.secure_output // "true"' < $payload)

options=$(jq -r '.params.options // ""' < $payload)
options_file=$(jq -r '.params.options_file // ""' < $payload)

if [ -z "$options" ] && [ -z "$options_file" ]; then
  echo "Must supply one of 'options' or 'options_file', not both"
  exit 1
fi
if [ -n "$options_file" ]; then
  options=$(cat $options_file)
fi
if [ -z "$options" ]; then
  echo "Must supply some options to fly"
  exit 1
fi
echo "Options: $options"

test "$debug" = "true" && set -x

init_fly $url $username $password $team $insecure

READSWITCH="-r"

if [ "$multiline_lines" = true ]; then
  READSWITCH=""
fi

while read $READSWITCH line; do
  (
    if [ "$secure_output" = false ]; then
      set -x
    fi
    fly -t main $line
  )
done <<< "$options"

jq -n "{
  version: {}
}" >&3
